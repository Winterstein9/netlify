{"mappings":"AAOA,IAAIA,OAAS,CAGTC,OAAQ,CACJ,IAAK,YACLC,QAAW,cACXC,WAAc,cACdC,QAAW,cACX,gBAAiB,eAQrBC,KAAK,WAEDC,KAAKC,QAAQ,GAIb,IAAI,IAAIC,KAASF,KAAKL,OAAO,CAGzB,IAAIQ,EAAWH,KAAKL,OAAOO,GAI3BF,KAAKC,QAAQG,KAAK,CAEdC,QAASH,EAETI,SAAUH,GAElB,CAEJ,EAIAI,IAAI,SAASC,GACTC,QAAQC,IAAI,QAAQF,GAEpB,IAAIG,EAAIX,KAAKC,QAAQW,OAErB,OAAQD,GAAE,CAGN,IAAIE,EAAOL,EAAKM,MAAMd,KAAKC,QAAQU,GAAGN,SACtCI,QAAQC,IAAI,OAAOG,GAEhBA,IAIU,WAANA,GACCJ,QAAQC,IAAI,oBACZK,OAAOC,QAAQC,MAGfD,QAAQE,UAAU,CAACC,KAAM,GAAI,UAAW,GAAGN,KAGvD,CACJ,GAMAO,OAAOC,SAASC,iBAAiB,UAMrC,IAAI,IAAIC,KAAKH,OAETG,EAAEC,iBAAiB,SAASC,IAExB/B,OAAOa,IAAIgB,EAAEG,IACbD,EAAEE,gBAAc","sources":["pilot.js"],"sourcesContent":["/*\ndocument.addEventListener(\"DOMContentLoaded\", function(e){\n    e.preventDefault()\n    console.log(\"DOMContentLoaded\")\n})\n*/\n\nlet Router = {\n\n    //объект routes\n    routes: {\n        \"/\": \"indexPage\",\n        \"gallery\": \"galleryPage\",\n        \"navigation\": \"galleryPage\",\n        \"replace\": \"galleryPage\",\n        \"/artwork/:id/\": \"artworkPage\"\n    },\n\n    /*\n    В объекте `routes` \n    непосредственно задаются маршруты: ключ — шаблон пути, а значение — название функции-контроллера.\n    */\n\n    init:function(){\n        // массив для путей\n        this._routes=[]\n\n        //извлекаются пути из объекта routes\n        //индекс объекта\n        for(let route in this.routes){\n            //methodName получает значение свойства объекта routes\n            //по индексу\n            let methodName=this.routes[route]\n\n           // console.log(\"methodName\",methodName)\n           //передает массиву извлекаемые свойства объекта\n            this._routes.push({\n                //этот объект содержит индекс свойства объекта routes\n                pattern: route,\n                //и значение этого индекса свойства\n                callback: methodName\n           });\n        }\n        //console.log(this._routes)\n    },\n\n//обработчик путей\n//path получает путь в виде id от ссылки\n    nav:function(path){\n        console.log(\"path:\",path)\n        //получить длинну массива с путями\n        let i = this._routes.length\n        //начинаем прогонять массив\n        while(--i){\n            //получить проверить на совпадение полученный путь\n            //с индексом которое уже свойство\n            let args = path.match(this._routes[i].pattern);\n            console.log(\"args\",args)\n            //если есть совпадение\n            if(args){\n                //this._routes[i].callback.apply(this, args.slice(1));\n                //location.hash = '9990000'\n                //если повторить - выпонить повторить\n                if(args==\"replace\"){\n                    console.log(\"выполнен replace\")\n                    window.history.go()\n                    //иначе - перейти к странице\n                }else{\n                    history.pushState({page: 1}, \"title 1\", `${args}`) //?page=1 POST\n                }\n            }\n        }\n    }\n}\n\n//Router.init(\"/\")\n\n//получаем все ссылки\nlet body_A=document.querySelectorAll(\"body a\")\n\n//console.log(\"--->\",body_A)\n\n//присваиваем им\n\nfor(let a of body_A){\n    //событие\n    a.addEventListener(\"click\",(e)=>{\n        //передаем их id \n        Router.nav(a.id)\n        e.preventDefault()\n    })\n}\n"],"names":["Router","routes","gallery","navigation","replace","init","this","_routes","route","methodName","push","pattern","callback","nav","path","console","log","i","length","args","match","window","history","go","pushState","page","body_A","document","querySelectorAll","a","addEventListener","e","id","preventDefault"],"version":3,"file":"index.99403d51.js.map"}