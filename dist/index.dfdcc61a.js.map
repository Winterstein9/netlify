{"mappings":"AAAA;;;;;AAKA,GAEA,IAAI,SAAS;IAET,eAAe;IACf,QAAQ;QACJ,KAAK;QACL,WAAW;QACX,cAAc;QACd,WAAW;QACX,iBAAiB;IACrB;IAEA;;;IAGA,GAEA,MAAK,WAAU;QACX,mBAAmB;QACnB,IAAI,CAAC,OAAO,GAAC,EAAE;QAEf,oCAAoC;QACpC,gBAAgB;QAChB,IAAI,IAAI,SAAS,IAAI,CAAC,MAAM,CAAC;YACzB,sDAAsD;YACtD,YAAY;YACZ,IAAI,aAAW,IAAI,CAAC,MAAM,CAAC,MAAM;YAElC,uCAAuC;YACvC,+CAA+C;YAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBACd,qDAAqD;gBACrD,SAAS;gBACT,mCAAmC;gBACnC,UAAU;YACf;QACH;IACA,2BAA2B;IAC/B;IAEJ,kBAAkB;IAClB,wCAAwC;IACpC,KAAI,SAAS,IAAI,EAAC;QACd,QAAQ,GAAG,CAAC,SAAQ;QACpB,kCAAkC;QAClC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM;QAC3B,2BAA2B;QAC3B,MAAM,EAAE,EAAE;YACN,kDAAkD;YAClD,iCAAiC;YACjC,IAAI,OAAO,KAAK,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO;YAC7C,QAAQ,GAAG,CAAC,QAAO;YACnB,sBAAsB;YACtB,IAAG;gBACC,sDAAsD;gBACtD,2BAA2B;gBAC3B,qCAAqC;gBACrC,IAAG,QAAM,WAAU;oBACf,QAAQ,GAAG,CAAC;oBACZ,OAAO,OAAO,CAAC,EAAE;gBACjB,4BAA4B;gBAChC,OACI,QAAQ,SAAS,CAAC;oBAAC,MAAM;gBAAC,GAAG,WAAW,CAAC,EAAE,KAAK,CAAC,EAAE,cAAc;;aAExE;QACL;IACJ;AACJ;AAEA,kBAAkB;AAElB,qBAAqB;AACrB,IAAI,SAAO,SAAS,gBAAgB,CAAC;AAErC,4BAA4B;AAE5B,gBAAgB;AAChB,KAAI,IAAI,KAAK,OACT,SAAS;AACT,EAAE,gBAAgB,CAAC,SAAQ,CAAC,IAAI;IAC5B,iBAAiB;IACjB,OAAO,GAAG,CAAC,EAAE,EAAE;IACf,EAAE,cAAc;AACpB","sources":["pilot.js"],"sourcesContent":["/*\ndocument.addEventListener(\"DOMContentLoaded\", function(e){\n    e.preventDefault()\n    console.log(\"DOMContentLoaded\")\n})\n*/\n\nlet Router = {\n\n    //объект routes\n    routes: {\n        \"/\": \"indexPage\",\n        \"gallery\": \"galleryPage\",\n        \"navigation\": \"galleryPage\",\n        \"replace\": \"galleryPage\",\n        \"/artwork/:id/\": \"artworkPage\"\n    },\n\n    /*\n    В объекте `routes` \n    непосредственно задаются маршруты: ключ — шаблон пути, а значение — название функции-контроллера.\n    */\n\n    init:function(){\n        // массив для путей\n        this._routes=[]\n\n        //извлекаются пути из объекта routes\n        //индекс объекта\n        for(let route in this.routes){\n            //methodName получает значение свойства объекта routes\n            //по индексу\n            let methodName=this.routes[route]\n\n           // console.log(\"methodName\",methodName)\n           //передает массиву извлекаемые свойства объекта\n            this._routes.push({\n                //этот объект содержит индекс свойства объекта routes\n                pattern: route,\n                //и значение этого индекса свойства\n                callback: methodName\n           });\n        }\n        //console.log(this._routes)\n    },\n\n//обработчик путей\n//path получает путь в виде id от ссылки\n    nav:function(path){\n        console.log(\"path:\",path)\n        //получить длинну массива с путями\n        let i = this._routes.length\n        //начинаем прогонять массив\n        while(--i){\n            //получить проверить на совпадение полученный путь\n            //с индексом которое уже свойство\n            let args = path.match(this._routes[i].pattern);\n            console.log(\"args\",args)\n            //если есть совпадение\n            if(args){\n                //this._routes[i].callback.apply(this, args.slice(1));\n                //location.hash = '9990000'\n                //если повторить - выпонить повторить\n                if(args==\"replace\"){\n                    console.log(\"выполнен replace\")\n                    window.history.go()\n                    //иначе - перейти к странице\n                }else{\n                    history.pushState({page: 1}, \"title 1\", `${args}`) //?page=1 POST\n                }\n            }\n        }\n    }\n}\n\n//Router.init(\"/\")\n\n//получаем все ссылки\nlet body_A=document.querySelectorAll(\"body a\")\n\n//console.log(\"--->\",body_A)\n\n//присваиваем им\nfor(let a of body_A){\n    //событие\n    a.addEventListener(\"click\",(e)=>{\n        //передаем их id \n        Router.nav(a.id)\n        e.preventDefault()\n    })\n}"],"names":[],"version":3,"file":"index.dfdcc61a.js.map","sourceRoot":"/__parcel_source_root/"}